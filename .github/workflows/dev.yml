name: Launcher Dev-Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    permissions:
      contents: write
      pages: write
      id-token: write
      attestations: write

    env:
      # Ensures Python uses UTF-8 encoding by default
      PYTHONUTF8: 1
      # Disables rich text formatting in Flet CLI output
      FLET_CLI_NO_RICH_OUTPUT: 1
      # Disables progress bars when using UV
      UV_NO_PROGRESS: 1

    steps:
      - name : Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        shell: bash
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libgtk-3-dev

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          activate-environment: true

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Run script
        run: |
          python update_version.py --dev

      - name: Pack Flet app
        shell: bash
        run: |
          flet pack \
            --name cube-launcher \
            --yes \
            --add-data=src/assets:assets \
            -i src/assets/icon.ico \
            ./src/main.py 
        working-directory: .

      - name: Sign Windows Executable
        if: runner.os == 'Windows'
        uses: dlemstra/code-sign-action@v1
        with:
          certificate: '${{ secrets.CERTIFICATE }}'
          password: '${{ secrets.CERTIFICATE_PASSWORD }}'
          recursive: false
          files: |
            dist/cube-launcher.exe

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}
          path: |
            dist/cube-launcher
            dist/cube-launcher.exe
          compression-level: 9
          include-hidden-files: true

      - name: Minimize uv cache
        run: uv cache prune --ci
