name: Launcher Dev-Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    permissions:
      contents: write
      pages: write
      id-token: write
      attestations: write

    env:
      # Ensures Python uses UTF-8 encoding by default
      PYTHONUTF8: 1
      # Disables rich text formatting in Flet CLI output
      FLET_CLI_NO_RICH_OUTPUT: 1
      # Disables progress bars when using UV
      UV_NO_PROGRESS: 1

    steps:
      - name : Checkout code
        uses: actions/checkout@v4

      - name: Setup Environment Variables
        if: ${{ !inputs.disable-cache }}
        shell: bash
        run: |
          echo "NUITKA_CACHE_DIR=${{ github.action_path }}/nuitka/cache" >> $GITHUB_ENV

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
            enable-cache: true
            activate-environment: true

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Install ccache
        if: ${{ runner.os == 'Linux' }}
        shell: bash
        run: |
          sudo apt-get install -y ccache

      - name: Cache Nuitka cache directory
        if: ${{ !inputs.disable-cache }}
        uses: actions/cache@v4
        with:
          path: ${{ env.NUITKA_CACHE_DIR }}
          key: ${{ runner.os }}-${{ runner.arch }}-python-${{ env.PYTHON_VERSION }}-nuitka-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-python-${{ env.PYTHON_VERSION }}-
            ${{ runner.os }}-${{ runner.arch }}-python-
            ${{ runner.os }}-${{ runner.arch }}-

      - name: Build with Nuitka
        shell: bash
        run: |
          set -e
          python -m nuitka \
          --include-package-data=flet \
          --include-package-data=assets \
          --output-file=cube-launcher \
          --windows-console-mode=disable \
          --script-name=./src/main.py \
          --assume-yes-for-downloads \
          --output-dir=build \
          --mode=app
        working-directory: .

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}_build
          path: |
            build/cube-launcher.exe
            build/cube-launcher
          include-hidden-files: true

      - name: Minimize uv cache
        run: uv cache prune --ci