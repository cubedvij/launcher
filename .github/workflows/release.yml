name: Launcher Release-Build

on:
  push:
    tags:
      - 'v*.*.*' # Matches version tags like v1.0.0


jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    permissions:
      contents: write
      pages: write
      id-token: write
      attestations: write
      
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
            enable-cache: true
            activate-environment: true

      - name: Install cosign
        uses: sigstore/cosign-installer@v3.5.0

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Run script
        run: |
          python update_version.py --release

      - name: Pack Flet app
        shell: bash
        run: |
          flet pack \
            --name cube-launcher \
            --yes \
            --add-data=src/assets:assets \
            ./src/main.py 
        working-directory: .

      - name: Sign with cosign (keyless)
        if: runner.os == 'Windows'
        env:
          COSIGN_EXPERIMENTAL: "1"
        run: |
          cosign sign-blob --yes --output-signature "dist/cube-launcher.exe.sig" "dist/cube-launcher.exe"

      - name: Sign Windows Executable
        if: runner.os == 'Windows'
        uses: dlemstra/code-sign-action@v1
        with:
          certificate: '${{ secrets.CERTIFICATE }}'
          password: '${{ secrets.CERTIFICATE_PASSWORD }}'
          folder: 'dist'
          recursive: false
          files: |
            cube-launcher.exe

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
          prerelease: false
          make_latest: true
          files: |
            dist/*
        continue-on-error: true

      - name: Attest build provenance
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: ./dist/*

      - name: Minimize uv cache
        run: uv cache prune --ci